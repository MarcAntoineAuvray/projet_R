"0","# Code de l’algorithme EM pour un melange de trois gaussiennnes unidimensionnelles"
"0",""
"0","n = 1000"
"0",""
"0","alpha = c(runif(1), runif(1), runif(1))"
"0",""
"0","mu = c(runif(1), runif(1), runif(1))"
"0",""
"0","sigma = c(runif(1), runif(1), runif(1))"
"0",""
"0","for (l in 1:n) {"
"0","  vrais1 = alpha[1]*dnorm(X, mean=mu[1], sd=sigma[1])"
"0","  vrais2 = alpha[2]*dnorm(X, mean=mu[2], sd=sigma[2])"
"0","  vrais3 = alpha[3]*dnorm(X, mean=mu[3], sd=sigma[3])"
"0","  vrais12 = vrais1 / (vrais1 + vrais2 + vrais3)"
"0","  vrais22 = vrais2 / (vrais1 + vrais2 + vrais3)"
"0","  vrais32 = vrais3 / (vrais1 + vrais2 + vrais3)"
"0","  alpha[1] = (1/n)*sum(vrais12)"
"0","  alpha[2] = (1/n)*sum(vrais22)"
"0","  alpha[3] = (1/n)*sum(vrais32)"
"0","  mu[1] = sum(vrais12*X)/sum(vrais12)"
"0","  mu[2] = sum(vrais22*X)/sum(vrais22)"
"0","  mu[3] = sum(vrais32*X)/sum(vrais32)"
"0","  sigma[1] = sqrt(sum(vrais12*(X-mu[1])^2)/(sum(vrais12)))"
"0","  sigma[2] = sqrt(sum(vrais22*(X-mu[2])^2)/(sum(vrais22)))"
"0","  sigma[3] = sqrt(sum(vrais32*(X-mu[3])^2)/(sum(vrais32)))"
"0","}"
"0",""
"0","# et pour afficher notre courbe avec les nouveaux parametres"
"0","A = rnorm(n, mu[1], sigma[1])"
"0","B = rnorm(n, mu[2], sigma[2])"
"0","C = rnorm(n, mu[3], sigma[3])"
"0",""
"0","D = rbinom(n, 1, alpha[1])"
"2","Avis dans rbinom(n, 1, alpha[1]) :"
"2"," Production de NAs
"
"0","E = rbinom(n, 1, alpha[2]*(1/(1-alpha[1])))"
"2","Avis dans rbinom(n, 1, alpha[2] * (1/(1 - alpha[1]))) :"
"2","
 "
"2"," Production de NAs
"
"0","# D[is.na(D)] = 0"
"0","# E[is.na(E)] = 0"
"0",""
"0","F_ = D*A+(1-D)*(E*B+(1-E)*C)"
"0",""
"0","plot(density(F_), xlab=""X"", ylab=""Y"", main=""Après 1000 itération de l’EM"", col=""red"")"
"2","Erreur dans density.default(F_) : 'x' contient une valeur manquante
"
